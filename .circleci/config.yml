version: 2
jobs:
  build:
    working_directory: ~/etops/micro-dockerhub-hook
    parallelism: 1
    environment:
      DOCKER_PRIVATE_REPO: etops
      IMAGE_NAME: micro-dockerhub-hook
    docker:
      - image: docker:latest

    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: Build application Docker image
          command: docker build --cache-from=$IMAGE_NAME -t $IMAGE_NAME .
          no_output_timeout: 30m
      - run:
          name: Save Docker image
          command: |
            mkdir -p ~/caches
            docker save -o ~/caches/$IMAGE_NAME.tar $IMAGE_NAME
          no_output_timeout: 30m

      - persist_to_workspace:
          root: ~/
          paths:
            - etops
            - caches

  test:
    working_directory: ~/etops/micro-dockerhub-hook
    parallelism: 1
    environment:
      DOCKER_PRIVATE_REPO: etops
      IMAGE_NAME: micro-dockerhub-hook
      ENVIRONMENT: DEV
    machine: true

    steps:
      - attach_workspace:
          at: ~/

      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i ~/caches/$IMAGE_NAME.tar

      - run:
          name: Run docker compose to deploy the stack
          command: |
            docker swarm init
            docker-compose -f docker-stacks/docker-compose.yml config | docker stack deploy --compose-file - micro-dockerhub-hook
      - run:
          command: docker service ps --no-trunc $(docker service ls -q)
          when: on_fail

      - run:
          name: Test micro-dockerhub-hook
          command: curl --fail -i -d @test/data/payload.json http://localhost:3000/abc123

  deploy:
    working_directory: ~/etops/micro-dockerhub-hook
    parallelism: 1
    environment:
      DOCKER_PRIVATE_REPO: etops
      IMAGE_NAME: micro-dockerhub-hook
    docker:
      - image: docker:latest

    steps:
      - setup_remote_docker:
          docker_layer_caching: true

      - attach_workspace:
          at: ~/

      - deploy:
          name: Push application Docker image
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker tag $IMAGE_NAME $DOCKER_PRIVATE_REPO/$IMAGE_NAME:latest
            docker tag $IMAGE_NAME $DOCKER_PRIVATE_REPO/$IMAGE_NAME:$CIRCLE_BUILD_NUM
            docker push $DOCKER_PRIVATE_REPO/$IMAGE_NAME:$CIRCLE_BUILD_NUM
            docker push $DOCKER_PRIVATE_REPO/$IMAGE_NAME:latest

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - test